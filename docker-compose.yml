version: '3.8'

services:
  frontend:
    image: rast53/raapp:v.1
    ports:
      - "8081:80"  # Порт для обратного прокси
    restart: unless-stopped
    networks:
      - ra-network
    depends_on:
      - backend
      
  backend:
    image: rast53/raserver:v.3
    ports:
      - "8080:8080"
    restart: always
    environment:
      - NODE_ENV=production
    volumes:
      - /volume2/cert/fullchain.pem:/app/fullchain.pem
      - /volume2/cert/privkey.pem:/app/privkey.pem
    networks:
      - ra-network
      
  telegram-bot:
    image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${DOCKER_IMAGE_TAG}
    container_name: ra-app-bot
    restart: always
    environment:
      - NODE_ENV=production
      - BOT_TOKEN=${BOT_TOKEN}
      - WEBHOOK_DOMAIN=${WEBHOOK_DOMAIN}
      - DATABASE_URL=${DATABASE_URL}
      - TELEGRAM_PROVIDER_TOKEN=${TELEGRAM_PROVIDER_TOKEN}
      - ADMIN_IDS=${ADMIN_IDS}
      - LOG_LEVEL=${LOG_LEVEL}
      - SUPPORT_EMAIL=${SUPPORT_EMAIL}
      - SUPPORT_PHONE=${SUPPORT_PHONE}
      - SELF_EMPLOYED_NAME=${SELF_EMPLOYED_NAME}
      - SELF_EMPLOYED_INN=${SELF_EMPLOYED_INN}
      - SELF_EMPLOYED_PHONE=${SELF_EMPLOYED_PHONE}
      - SELF_EMPLOYED_EMAIL=${SELF_EMPLOYED_EMAIL}
    volumes:
      - /volume2/ra-app-bot/logs:/app/logs
      - /volume2/cert/fullchain.pem:/app/fullchain.pem
      - /volume2/cert/privkey.pem:/app/privkey.pem
    networks:
      - ra-network
    depends_on:
      - backend

networks:
  ra-network:
    external: true  # Используем существующую сеть 
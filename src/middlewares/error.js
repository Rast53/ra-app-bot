const { setupLogger } = require('../utils/logger');

const logger = setupLogger();

/**
 * Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegram
 * @param {Function} next - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É middleware
 */
async function errorMiddleware(ctx, next) {
  try {
    return await next();
  } catch (error) {
    // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    logger.error('Bot error:', {
      error: error.message,
      stack: error.stack,
      update: ctx.update
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try {
      await ctx.reply(
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.'
      );
    } catch (replyError) {
      logger.error('Error sending error message to user:', replyError);
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    try {
      const adminIds = process.env.ADMIN_IDS ? process.env.ADMIN_IDS.split(',').map(id => parseInt(id.trim())) : [];
      
      if (adminIds.length > 0) {
        const errorMessage = `üö® *–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ*\n\n` +
          `*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* ${ctx.from?.id} (${ctx.from?.username || '–±–µ–∑ –∏–º–µ–Ω–∏'})\n` +
          `*–û—à–∏–±–∫–∞:* ${error.message}\n` +
          `*–í—Ä–µ–º—è:* ${new Date().toISOString()}\n\n` +
          `*–°—Ç–µ–∫:*\n\`\`\`\n${error.stack?.substring(0, 500) || '–ù–µ—Ç —Å—Ç–µ–∫–∞'}\n\`\`\``;
        
        for (const adminId of adminIds) {
          try {
            await ctx.telegram.sendMessage(adminId, errorMessage, { parse_mode: 'Markdown' });
          } catch (adminError) {
            logger.error(`Error sending error notification to admin ${adminId}:`, adminError);
          }
        }
      }
    } catch (notifyError) {
      logger.error('Error notifying admins about error:', notifyError);
    }
  }
}

module.exports = {
  errorMiddleware
}; 